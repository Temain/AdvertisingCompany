@Styles.Render("~/Content/datepicker")

<h1 class="page-title">
    Задания <small>
        <small>Для работы с заданиями выберите клиента.</small>
    </small>
</h1>
<div class="row">
    <div class="col-md-12">
        <section class="widget">
            <header>
                @*<h4>
                    Клиент @*<span class="fw-semi-bold">Styles</span>
                </h4>*@

                <div class="row">
                    <div class="col-md-6">
                    @{
                        var clients = (SelectList)ViewBag.Clients;
                        if (clients.Any())
                        {
                            <select id="clientId" class="form-control monospace" data-bind="value : ClientId, event : { change : clientChanged }">
                                <option>Выберите клиента</option>
                                @foreach (SelectListItem item in clients)
                                {
                                    <option value="@item.Value.Trim()">@Html.Raw(item.Text)</option>
                                }
                            </select>
                        }
                    }
                    </div>
                </div>



                <div class="widget-controls">
                    @*<a href="#"><i class="glyphicon glyphicon-cog"></i></a>
                    <a data-widgster="close" href="#"><i class="glyphicon glyphicon-remove"></i></a>*@                
                </div>
            </header>
            <div class="widget-body">
                <!-- Progress -->
                <div id="progress" class="row" style="display: none">
                    <div class="col-md-4 col-md-offset-4">
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%">
                                <span class="sr-only">100% Complete</span>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- End of progress -->

                <!-- Tasks list -->
                <!-- ko if: Tasks().length > 0 -->
                <div class="table-responsive">
                    <table class="table table-hover table-condensed">
                        <thead>
                            <tr>
                                <th>№</th>
                                <th>Город</th>
                                <th>Район</th>
                                <th>Дата создания</th>
                                <th>Действия</th>
                            </tr>
                        </thead>
                        <tbody data-bind="foreach: Tasks">
                            <tr>
                                <td data-bind="text: ((($root.SelectedPage() - 1) * $root.SelectedPageSize()) + $index() + 1) + '.'"></td>
                                <td data-bind="text: City()"></td>
                                <td data-bind="text: Area()"></td>
                                <td data-bind="text: Date()"></td>
                                <td>
                                    <a href="#" class="btn btn-link action-link" data-bind="attr: { 'href' : '/Task/Edit/' + TaskId() }, tooltip: { title: 'Удалить', trigger: 'hover' }">
                                        <span class="glyphicon glyphicon-remove text-danger icon"></span>
                                    </a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <!-- /ko -->
                <!-- End of tasks list -->

                <!-- Pagination -->
                <!-- ko if: Tasks().length > 0 -->
                <div class="row text-center">
                    <div class="col-md-3">
                        <form class="form-inline">
                            <div class="form-group">
                                <label for="">Показывать записей: </label>
                                <select class="form-control" data-bind="options: PageSizes, value: SelectedPageSize,event : { change: pageSizeChanged }"></select>
                            </div>
                        </form>
                    </div>
                    <div class="col-md-6">
                        <!-- ko if: PagesCount() > 1 -->
                        <nav>
                            <ul class="pagination">
                                <li>
                                    <a href="#" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>

                                <!-- ko foreach: new Array(PagesCount()) -->
                                <!-- ko if: $index() >= $root.SelectedPage() - 4 && $index() <= $root.SelectedPage() + 2 -->
                                <li data-bind="attr: { 'class' : $root.SelectedPage() == ($index() + 1) ? 'active' : '' }">
                                    <a href="#" data-bind="text: $index()+1, click: function () { $root.selectedPageChanged($index() + 1); }"></a>
                                </li>
                                <!-- /ko -->
                                <!-- /ko -->
                                <li>
                                    <a href="#" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                        <!-- /ko -->
                    </div>
                </div>
                <!-- /ko -->
                <!-- End of pagination -->
            </div>
        </section>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/datepicker")
    <script src="~/Scripts/progress.js"></script>

    <script>
        function MainViewModel() {
            var self = this;

            self.Tasks = ko.observableArray([]);
            self.Cities = ko.observableArray([]);
            self.Areas = ko.observableArray([]);

            self.ClientId = ko.observable('');
            self.SelectedPage = ko.observable(1);
            self.PagesCount = ko.observable('');
            self.PageSizes = ko.observableArray([10, 25, 50, 100, 200]);
            self.SelectedPageSize = ko.observable(10);

            self.FilterStartDate = ko.observable('');
            self.FilterEndDate = ko.observable('');
            self.SelectedCityId = ko.observable('');
            self.SelectedAreaId = ko.observable('');
            self.SelectedStreet = ko.observable('');
            self.SelectedHouse = ko.observable('');

            self.clientChanged = function () {
                self.loadClientTasks();
            };

            self.loadClientTasks = function() {
                Progress.Show();
                $.post('/Admin/Task/Get', {
                    page: self.SelectedPage(),
                    pageSize: self.SelectedPageSize(),
                    clientId: self.ClientId()
                }, function(response) {
                    ko.mapping.fromJS(response.Tasks,
                        {
                            key: function(data) {
                                return ko.utils.unwrapObservable(data.StudentId);
                            },
                            create: function(options) {
                                return new TaskViewModel(options.data);
                            }
                        },
                        self.Tasks
                    );
                    self.PagesCount(response.PagesCount);
                    Progress.Hide();
                });
            };

            self.loadCities = function () {
                self.Cities([]);

                $.post('/Address/GetCities', function(cities) {
                    self.Cities(cities);
                });
            };

            self.loadAreas = function () {
                self.Areas([]);

                $.post('/Address/GetAreas', { cityId : self.SelectedCityId }, function (areas) {
                    self.Areas(areas);
                });
            };

            self.selectedPageChanged = function(page) {
                self.SelectedPage(page);
                self.loadClientTasks();

                window.scrollTo(0, 0);
            };

            self.pageSizeChanged = function() {
                self.SelectedPage(1);
                self.loadClientTasks();

                window.scrollTo(0, 0);
            };

            self.clearFilter = function() {
                self.SelectedPage(1);

                self.loadClientTasks();
            };
        }

        // Bindings
        ko.bindingHandlers.tooltip = {
            init: function(element, valueAccessor) {
                var local = ko.utils.unwrapObservable(valueAccessor()),
                    options = {};

                ko.utils.extend(options, ko.bindingHandlers.tooltip.options);
                ko.utils.extend(options, local);

                $(element).tooltip(options);

                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                    $(element).tooltip("destroy");
                });
            },
            options: {
                placement: "top",
                trigger: "click"
            }
        };

        function TaskViewModel(taskViewModel) {
            var self = this;
            self.TaskId = ko.observable(taskViewModel.TaskId || '');
            self.City = ko.observable(taskViewModel.City || '');
            self.Area = ko.observable(taskViewModel.Area || '');
            self.Street = ko.observable(taskViewModel.Street || '');
            self.HouseNumber = ko.observable(taskViewModel.HouseNumber || '');
            self.BuildingNumber = ko.observable(taskViewModel.BuildingNumber || '');
            self.PorchNumber = ko.observable(taskViewModel.PorchNumber || '');
            self.Date = ko.observable(taskViewModel.Date || '');
        }

        var viewModel = new MainViewModel();
        $(function() {
            ko.applyBindings(viewModel);
            viewModel.loadCities();

            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}